texts
in computing computer performance is the amount of useful work accomplished by a computer system outside of specific contexts computer performance is estimated in terms of accuracy efficiency and speed of executing computer program instructions when it comes to high computer performance one or more of the following factors might be involved,
short response time for a given piece of work,
high throughput rate of processing work,
low utilization of computing resource s,
high availability of the computing system or application,
fast or highly compact data compression and decompression,
high bandwidth,
short data transmission time,
technical and non technical definitions,
the performance of any computer system can be evaluated in measurable technical terms using one or more of the metrics listed above this way the performance can be,
compared relative to other systems or the same system before after changes,
in absolute terms e g for fulfilling a contractual obligationwhilst the above definition relates to a scientific technical approach the following definition given by arnold allen would be useful for a non technical audience,
the word performance in computer performance means the same thing that performance means in other contexts that is it means how well is the computer doing the work it is supposed to do,
as an aspect of software quality,
computer software performance particularly software application response time is an aspect of software quality that is important in human computer interactions,
performance engineering,
performance engineering within systems engineering encompasses the set of roles skills activities practices tools and deliverables applied at every phase of the systems development life cycle which ensures that a solution will be designed implemented and operationally supported to meet the performance requirements defined for the solution,
performance engineering continuously deals with trade offs between types of performance occasionally a cpu designer can find a way to make a cpu with better overall performance by improving one of the aspects of performance presented below without sacrificing the cpu s performance in other areas for example building the cpu out of better faster transistors,
however sometimes pushing one type of performance to an extreme leads to a cpu with worse overall performance because other important aspects were sacrificed to get one impressive looking number for example the chip s clock rate see the megahertz myth,
application performance engineering,
application performance engineering ape is a specific methodology within performance engineering designed to meet the challenges associated with application performance in increasingly distributed mobile cloud and terrestrial it environments it includes the roles skills activities practices tools and deliverables applied at every phase of the application lifecycle that ensure an application will be designed implemented and operationally supported to meet non functional performance requirements,
aspects of performance,
computer performance metrics things to measure include availability response time channel capacity latency completion time service time bandwidth throughput relative efficiency scalability performance per watt compression ratio instruction path length and speed up cpu benchmarks are available,
availability,
availability of a system is typically measured as a factor of its reliability as reliability increases so does availability that is less downtime availability of a system may also be increased by the strategy of focusing on increasing testability and maintainability and not on reliability improving maintainability is generally easier than reliability maintainability estimates repair rates are also generally more accurate however because the uncertainties in the reliability estimates are in most cases very large it is likely to dominate the availability prediction uncertainty problem even while maintainability levels are very high,
response time,
response time is the total amount of time it takes to respond to a request for service in computing that service can be any unit of work from a simple disk io to loading a complex web page the response time is the sum of three numbers,
service time how long it takes to do the work requested,
wait time how long the request has to wait for requests queued ahead of it before it gets to run,
transmission time how long it takes to move the request to the computer doing the work and the response back to the requestor,
processing speed,
most consumers pick a computer architecture normally intel ia architecture to be able to run a large base of pre existing pre compiled software being relatively uninformed on computer benchmarks some of them pick a particular cpu based on operating frequency see megahertz myth,
some system designers building parallel computers pick cpus based on the speed per dollar,
channel capacity,
channel capacity is the tightest upper bound on the rate of information that can be reliably transmitted over a communications channel by the noisy channel coding theorem the channel capacity of a given channel is the limiting information rate in units of information per unit time that can be achieved with arbitrarily small error probability information theory developed by claude e shannon during world war ii defines the notion of channel capacity and provides a mathematical model by which one can compute it the key result states that the capacity of the channel as defined above is given by the maximum of the mutual information between the input and output of the channel where the maximization is with respect to the input distribution,
latency,
latency is a time delay between the cause and the effect of some physical change in the system being observed latency is a result of the limited velocity with which any physical interaction can take place this velocity is always lower or equal to speed of light therefore every physical system that has spatial dimensions different from zero will experience some sort of latency,
the precise definition of latency depends on the system being observed and the nature of stimulation in communications the lower limit of latency is determined by the medium being used for communications in reliable two way communication systems latency limits the maximum rate that information can be transmitted as there is often a limit on the amount of information that is in flight at any one moment in the field of human machine interaction perceptible latency delay between what the user commands and when the computer provides the results has a strong effect on user satisfaction and usability,
computers run sets of instructions called a process in operating systems the execution of the process can be postponed if other processes are also executing in addition the operating system can schedule when to perform the action that the process is commanding for example suppose a process commands that a computer card s voltage output be set high low high low and so on at a rate of hz the operating system may choose to adjust the scheduling of each transition high low or low high based on an internal clock the latency is the delay between the process instruction commanding the transition and the hardware actually transitioning the voltage from high to low or low to high,
system designers building real time computing systems want to guarantee worst case response that is easier to do when the cpu has low interrupt latency and when it has deterministic response,
bandwidth,
in computer networking bandwidth is a measurement of bit rate of available or consumed data communication resources expressed in bits per second or multiples of it bit s kbit s mbit s gbit s etc,
bandwidth sometimes defines the net bit rate aka peak bit rate information rate or physical layer useful bit rate channel capacity or the maximum throughput of a logical or physical communication path in a digital communication system for example bandwidth tests measure the maximum throughput of a computer network the reason for this usage is that according to hartley s law the maximum data rate of a physical communication link is proportional to its bandwidth in hertz which is sometimes called frequency bandwidth spectral bandwidth rf bandwidth signal bandwidth or analog bandwidth,
throughput,
in general terms throughput is the rate of production or the rate at which something can be processed,
in communication networks throughput is essentially synonymous to digital bandwidth consumption in wireless networks or cellular communication networks the system spectral efficiency in bit s hz area unit bit s hz site or bit s hz cell is the maximum system throughput aggregate throughput divided by the analog bandwidth and some measure of the system coverage area,
in integrated circuits often a block in a data flow diagram has a single input and a single output and operate on discrete packets of information examples of such blocks are fft modules or binary multipliers because the units of throughput are the reciprocal of the unit for propagation delay which is seconds per message or seconds per output throughput can be used to relate a computational device performing a dedicated function such as an asic or embedded processor to a communications channel simplifying system analysis,
relative efficiency,
scalability,
scalability is the ability of a system network or process to handle a growing amount of work in a capable manner or its ability to be enlarged to accommodate that growth,
power consumption,
the amount of electricity used by the computer this becomes especially important for systems with limited power sources such as solar batteries human power,
performance per watt,
system designers building parallel computers such as google s hardware pick cpus based on their speed per watt of power because the cost of powering the cpu outweighs the cost of the cpu itself,
compression ratio,
compression is useful because it helps reduce resource usage such as data storage space or transmission capacity because compressed data must be decompressed to use this extra processing imposes computational or other costs through decompression this situation is far from being a free lunch data compression is subject to a space time complexity trade off,
size and weight,
this is an important performance feature of mobile systems from the smart phones you keep in your pocket to the portable embedded systems in a spacecraft,
environmental impact,
the effect of a computer or computers on the environment during manufacturing and recycling as well as during use measurements are taken with the objectives of reducing waste reducing hazardous materials and minimizing a computer s ecological footprint,
transistor count,
the transistor count is the number of transistors on an integrated circuit ic transistor count is the most common measure of ic complexity,
benchmarks,
because there are so many programs to test a cpu on all aspects of performance benchmarks were developed,
the most famous benchmarks are the specint and specfp benchmarks developed by standard performance evaluation corporation and the consumermark benchmark developed by the embedded microprocessor benchmark consortium eembc,
software performance testing,
in software engineering performance testing is in general testing performed to determine how a system performs in terms of responsiveness and stability under a particular workload it can also serve to investigate measure validate or verify other quality attributes of the system such as scalability reliability and resource usage,
performance testing is a subset of performance engineering an emerging computer science practice which strives to build performance into the implementation design and architecture of a system,
profiling performance analysis,
in software engineering profiling program profiling software profiling is a form of dynamic program analysis that measures for example the space memory or time complexity of a program the usage of particular instructions or frequency and duration of function calls the most common use of profiling information is to aid program optimization,
profiling is achieved by instrumenting either the program source code or its binary executable form using a tool called a profiler or code profiler a number of different techniques may be used by profilers such as event based statistical instrumented and simulation methods,
performance tuning,
performance tuning is the improvement of system performance this is typically a computer application but the same methods can be applied to economic markets bureaucracies or other complex systems the motivation for such activity is called a performance problem which can be real or anticipated most systems will respond to increased load with some degree of decreasing performance a system s ability to accept a higher load is called scalability and modifying a system to handle a higher load is synonymous to performance tuning,
systematic tuning follows these steps,
assess the problem and establish numeric values that categorize acceptable behavior,
measure the performance of the system before modification,
identify the part of the system that is critical for improving the performance this is called the bottleneck,
modify that part of the system to remove the bottleneck,
measure the performance of the system after modification,
if the modification makes the performance better adopt it if the modification makes the performance worse put it back to the way it was,
perceived performance,
perceived performance in computer engineering refers to how quickly a software feature appears to perform its task the concept applies mainly to user acceptance aspects,
the amount of time an application takes to start up or a file to download is not made faster by showing a startup screen see splash screen or a file progress dialog box however it satisfies some human needs it appears faster to the user as well as providing a visual cue to let them know the system is handling their request,
in most cases increasing real performance increases perceived performance but when real performance cannot be increased due to physical limitations techniques can be used to increase perceived performance,
performance equation,
the total amount of time t required to execute a particular benchmark program is,
displaystyle t tfrac nc f,
or equivalently,
displaystyle p tfrac if n,
where,
textstyle p frac t,
is the performance in terms of time to execute,
textstyle n,
is the number of instructions actually executed the instruction path length the code density of the instruction set strongly affects n the value of n can either be determined exactly by using an instruction set simulator if available or by estimation itself based partly on estimated or actual frequency distribution of input variables and by examining generated machine code from an hll compiler it cannot be determined from the number of lines of hll source code n is not affected by other processes running on the same processor the significant point here is that hardware normally does not keep track of or at least make easily available a value of n for executed programs the value can therefore only be accurately determined by instruction set simulation which is rarely practiced,
textstyle f,
is the clock frequency in cycles per second,
textstyle c frac i,
is the average cycles per instruction cpi for this benchmark,
textstyle i frac c,
is the average instructions per cycle ipc for this benchmark even on one machine a different compiler or the same compiler with different compiler optimization switches can change n and cpi the benchmark executes faster if the new compiler can improve n or c without making the other worse but often there is a trade off between them is it better for example to use a few complicated instructions that take a long time to execute or to use instructions that execute very quickly although it takes more of them to execute the benchmark,
a cpu designer is often required to implement a particular instruction set and so cannot change n,
sometimes a designer focuses on improving performance by making significant improvements in f with techniques such as deeper pipelines and faster caches while hopefully not sacrificing too much c leading to a speed demon cpu design,
sometimes a designer focuses on improving performance by making significant improvements in cpi with techniques such as out of order execution superscalar cpus larger caches caches with improved hit rates improved branch prediction speculative execution etc while hopefully not sacrificing too much clock frequency leading to a brainiac cpu design,
for a given instruction set and therefore fixed n and semiconductor process the maximum single thread performance t requires a balance between brainiac techniques and speedracer techniques,
see also,
algorithmic efficiency,
computer performance by orders of magnitude,
network performance,
latency oriented processor architecture,
optimization computer science,
ram update rate,
complete instruction set,
hardware acceleration,
speedup,
cache replacement policies,
references,
